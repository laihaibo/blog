<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA['实现audio的暂停，播放，离开页面暂停功能'']]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/08/13/audio%E5%8A%A8%E7%94%BB/</url>
      <content type="html"><![CDATA[<p>用jquery实现audio的暂停，播放，离开页面暂停功能<br><a id="more"></a><br>html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;music&quot; class=&quot;play&quot;&gt;</div><div class="line">    &lt;audio loop=&quot;loop&quot; id=&quot;maudio&quot; autoplay=&quot;autoplay&quot;&gt;</div><div class="line">        &lt;source  src=&quot;./src/Crazy%20Bird.mp3&quot; type=&quot;audio/mpeg&quot;&gt;</div><div class="line">        你的浏览器不支持audio！</div><div class="line">    &lt;/audio&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>css<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#music&#123;position: fixed;top: 10px;left: 10px;width: 32px;height: 32px;background:url(./img/music.svg) no-repeat;z-index: 70;background-position: center;background-size: 100%;&#125;</div><div class="line">.play&#123;animation: zhuanzhuanzhuan 1s linear infinite;&#125;</div><div class="line">@keyframes zhuanzhuanzhuan&#123;</div><div class="line">    0%&#123;transform: rotate(0deg);&#125;</div><div class="line">    100%&#123;transform: rotate(360deg);&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">$(&apos;#music&apos;).click(function() &#123;</div><div class="line">    if ($(&apos;#maudio&apos;)[0].paused) &#123;</div><div class="line">        $(&apos;#maudio&apos;)[0].play();</div><div class="line">        // $(&apos;#music&apos;).addClass(&apos;play&apos;);</div><div class="line">        $(&apos;#music&apos;).css(&apos;animationPlayState&apos;, &apos;running&apos;);</div><div class="line">    &#125; else &#123;</div><div class="line">        $(&apos;#maudio&apos;)[0].pause();</div><div class="line">        // $(&apos;#music&apos;).removeClass(&apos;play&apos;);</div><div class="line">        $(&apos;#music&apos;).css(&apos;animationPlayState&apos;, &apos;paused&apos;);//暂停后可以从暂停处继续动画</div><div class="line">    &#125;;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">//检测页面是否离开，如果离开则暂停播放</div><div class="line">document.addEventListener(&apos;visibilitychange&apos;, function() &#123;</div><div class="line">    if ($(&apos;#maudio&apos;)[0].paused==false)&#123;</div><div class="line">        if (document.visibilityState == &apos;hidden&apos;) &#123;</div><div class="line">            $(&apos;#maudio&apos;)[0].pause();</div><div class="line">            $(&apos;#music&apos;).css(&apos;animationPlayState&apos;, &apos;paused&apos;);</div><div class="line">        &#125; else &#123;</div><div class="line">            $(&apos;#maudio&apos;)[0].play();</div><div class="line">            $(&apos;#music&apos;).css(&apos;animationPlayState&apos;, &apos;running&apos;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA['jQuery实现信息滚动条']]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/08/13/jQuery%E5%AE%9E%E7%8E%B0%E4%BF%A1%E6%81%AF%E6%BB%9A%E5%8A%A8%E6%9D%A1/</url>
      <content type="html"><![CDATA[<p>做了一个响应式的互联网金融网站，基本上该有的功能都有了，想还想去，应该还要添加一个信息滚动条功能，来循环播出最新公告。因为之前已经采用过JQuery插件，于是就用Jquery实现dom操作。</p>
<h2 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h2><p>通过JQuery的slideUp方法将ul的第一个li隐藏，然后将此li append到ul的末尾，再slideDown出来。<br><a id="more"></a></p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>append的操作优先于slideUp，所以想象中的slideUp–&gt;append–&gt; slideDown，会变成append–&gt;slideUp–&gt; slideDown。</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><blockquote>
<p>when you are using methods that animate content, those animations are added to what is called a queue, specifically the “fx” queue. normal jquery methods, such as prependTo(), are not added to the “fx” queue, therefore they get executed immediately instead of waiting till the previously added item in the queue is executed.</p>
</blockquote>
<p>append方法会先于动画函数的队列执行</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol>
<li>delay 方法<br> 可以设置一个延迟，但是时间很难掌握，于是采用queue方案</li>
<li>queue 方法</li>
</ol>
<h2 id="最终实现"><a href="#最终实现" class="headerlink" title="最终实现"></a>最终实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">var $logs = $(&apos;#logs&apos;);</div><div class="line">    //设置定时器</div><div class="line">    var timer;</div><div class="line">    var speed =50;</div><div class="line">    var daly=2000;</div><div class="line"></div><div class="line">    function start()&#123;</div><div class="line">      $(&apos;#logs li:first&apos;).slideUp().queue(function(next)&#123;</div><div class="line">        //将append操作插入到动画队列中</div><div class="line">        $(this).appendTo($logs);</div><div class="line">        next();</div><div class="line">      &#125;).slideDown();</div><div class="line">      timer = setInterval(scroll,speed);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    function scroll()&#123;</div><div class="line">      clearInterval(timer);</div><div class="line">      setTimeout(start,daly);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //初始化，延迟2s开始播放</div><div class="line">    setTimeout(start,daly);</div></pre></td></tr></table></figure>
<p>html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;ul id=&quot;logs&quot;&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;This is log 1&lt;/a&gt;&lt;/li&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;This is log 2&lt;/a&gt;&lt;/li&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;This is log 3&lt;/a&gt;&lt;/li&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;This is log 4&lt;/a&gt;&lt;/li&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;This is log 5&lt;/a&gt;&lt;/li&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;This is log 6&lt;/a&gt;&lt;/li&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;This is log 7&lt;/a&gt;&lt;/li&gt;</div><div class="line">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;This is log 8&lt;/a&gt;&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div></pre></td></tr></table></figure></p>
<p>css<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">  font-size: 16px;</div><div class="line">&#125;</div><div class="line">ul &#123;</div><div class="line">    /*height: 1.4rem;*/</div><div class="line">    overflow: hidden;</div><div class="line">  &#125;</div><div class="line">li&#123;</div><div class="line">    /*height: 1.1rem;*/</div><div class="line">  &#125;</div><div class="line">a&#123;</div><div class="line">    line-height: 1.4rem;</div><div class="line">    height: 1.4rem;</div><div class="line">  &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[angular2中使用模板ngFor方法时绑定img的src属性产生403错误的解决办法]]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/08/01/angular2-ngFor-img-src-403/</url>
      <content type="html"><![CDATA[<p>最近想用ionic2复刻一个知乎日报的app。</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在测试时候发现一个错误，在img使用src绑定模板的url链接时，访问得到403错误。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;&#123;&#123;story.images&#125;&#125;&quot; alt=&quot;&quot;&gt;</div><div class="line">//story.images=http://pic4.zhimg.com/34d5241372196fb08a2cb620c3f554b8.jpg</div></pre></td></tr></table></figure></p>
<p>得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET http://localhost:8100/pic4.zhimg.com/34d5241372196fb08a2cb620c3f554b8.jpg 404 (Not Found)</div></pre></td></tr></table></figure></p>
<p>而且文件的type是text/html，不是想要的image/jpeg</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>查看了很多angular2这类问题，看了angular2的模板，但是都没有看到一个解决方法，此时看到另一个用vue复刻知乎日报作者的写法是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://images.weserv.nl/?url=pic3.zhimg.com/f5bf405f11a03c129c88f064aae142fe.jpg</div></pre></td></tr></table></figure></p>
<p>打开看了一下<a href="https://images.weserv.nl，似乎是一个图片缓存网站。搞不清原理，于是我先试了一下，写作" target="_blank" rel="external">https://images.weserv.nl，似乎是一个图片缓存网站。搞不清原理，于是我先试了一下，写作</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;//images.weserv.nl/?url=&#123;&#123;story.images&#125;&#125;&quot; alt=&quot;&quot;&gt;</div></pre></td></tr></table></figure></p>
<p>没想到顺利解决，至于原理，慢慢搞清。</p>
<h2 id="另一个解决办法"><a href="#另一个解决办法" class="headerlink" title="另一个解决办法"></a>另一个解决办法</h2><p>使用sqlite存储图片为二进制文件到本地</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA['国家省市三级联动select']]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/07/26/%E5%9B%BD%E5%AE%B6%E7%9C%81%E5%B8%82%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8select/</url>
      <content type="html"><![CDATA[<p>今天一直在完善百度ife春季赛的时候，看到这个三级联动的表，要求是做出样式，然而突然很想把样式给完善。<br><a id="more"></a></p>
<p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">var state = document.getElementById(&apos;selectState&apos;);</div><div class="line">var province = document.getElementById(&apos;selectPro&apos;);</div><div class="line">var city = document.getElementById(&apos;selectCity&apos;);</div><div class="line">var stateIndex = &apos;&apos;;</div><div class="line">var stateSelected = &apos;&apos;;</div><div class="line">var data = &#123;</div><div class="line">  &apos;中国&apos;: &#123;</div><div class="line">    &apos;浙江&apos;: [&apos;宁波&apos;, &apos;台州&apos;, &apos;杭州&apos;],</div><div class="line">    &apos;上海&apos;: [&apos;松江&apos;, &apos;崇明&apos;, &apos;浦东&apos;],</div><div class="line">    &apos;江苏&apos;: [&apos;苏州&apos;, &apos;无锡&apos;, &apos;常州&apos;]</div><div class="line">  &#125;,</div><div class="line">  &apos;日本&apos;: &#123;</div><div class="line">    &apos;神奈川县&apos;: [&apos;横滨市&apos;, &apos;川崎市&apos;, &apos;相模原市&apos;],</div><div class="line">    &apos;东京都&apos;: [&apos;世田谷区&apos;, &apos;涩谷区&apos;, &apos;八王子市&apos;],</div><div class="line">    &apos;大阪府&apos;: [&apos;大阪市&apos;, &apos;堺市&apos;, &apos;岸和田市&apos;]</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">function choiceState() &#123;</div><div class="line">  province.innerHTML = &apos;&apos;;</div><div class="line">  var pros = [];</div><div class="line">  stateIndex = state.selectedIndex;</div><div class="line">  stateSelected = state[stateIndex].value;</div><div class="line">  for (var key in data[stateSelected]) &#123;</div><div class="line">    pros.push(key);</div><div class="line">  &#125;</div><div class="line">  for (var i = pros.length - 1; i &gt;= 0; i--) &#123;</div><div class="line">    province.options.add(new Option(pros[i], pros[i]));</div><div class="line">  &#125;</div><div class="line">  choicePro();</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">function choicePro() &#123;</div><div class="line">  city.innerHTML = &apos;&apos;;</div><div class="line">  var provinceIndex = province.selectedIndex;</div><div class="line">  var provinceSelected = province[provinceIndex].value;</div><div class="line">  var citys = data[stateSelected][provinceSelected];</div><div class="line">  for (var i = 0; i &lt; citys.length; i++) &#123;</div><div class="line">    city.options.add(new Option(citys[i], citys[i]));</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">//添加监听事件</div><div class="line">state.addEventListener(&apos;change&apos;, choiceState);</div><div class="line">province.addEventListener(&apos;change&apos;, choicePro);</div><div class="line">//初始化</div><div class="line">choiceState();</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ionic2学习笔记之navigation组件]]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/07/25/ionic2-navigation/</url>
      <content type="html"><![CDATA[<p>最近在学习用ionic2@beta32制作app，真是坑得眼泪都要流出来了。特别是这个navigation控件，官方文档是beta10版本，又看了多人不同版本的文档，再进行尝试，终于可以在两个页面之间传递数据了，本文谨做记录。<br><a id="more"></a></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>在contect.html中点击某个联系人，打开一个页面（contectDetals.html），显示该联系人的姓名和号码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;ion-content&gt;</div><div class="line">  &lt;ion-list&gt;</div><div class="line">    &lt;ion-list-header&gt;联系人&lt;/ion-list-header&gt;</div><div class="line">    &lt;ion-item *ngFor=&quot;let contact of contacts&quot; (click)=&quot;itemClick($event,contact)&quot;&gt;</div><div class="line">      &lt;ion-avatar item-left&gt;</div><div class="line">        &lt;img src=&quot;../images/&#123;&#123;contact.contactid&#125;&#125;.jpg&quot;&gt;</div><div class="line">      &lt;/ion-avatar&gt;</div><div class="line">      &lt;h2&gt;&#123;&#123;contact.contactname&#125;&#125;&lt;/h2&gt;</div><div class="line">      &lt;p&gt;&#123;&#123;contact.contacttext&#125;&#125;&lt;/p&gt;</div><div class="line">    &lt;/ion-item&gt;</div><div class="line">  &lt;/ion-list&gt;</div><div class="line">&lt;/ion-content&gt;</div></pre></td></tr></table></figure></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>contact.ts中这样写：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">import &#123;Component&#125; from &apos;@angular/core&apos;;</div><div class="line">import &#123;NavController,NavParams&#125; from &apos;ionic-angular&apos;;</div><div class="line">import &#123;ContactDetailsPage&#125; from &apos;../contact/contactdetails&apos;;</div><div class="line"></div><div class="line">@Component(&#123;</div><div class="line">  templateUrl: &apos;build/pages/contact/contact.html&apos;</div><div class="line">&#125;)</div><div class="line">export class ContactPage &#123;</div><div class="line">  contacts;</div><div class="line"></div><div class="line">  constructor(private navCtrl: NavController,params:NavParams) &#123;</div><div class="line"></div><div class="line">    this.navCtrl = navCtrl;</div><div class="line">    // 一般数据源都是从api获取，这里模拟一下</div><div class="line">    this.contacts = [</div><div class="line">      &#123;&quot;contactid&quot;:0,&quot;contactname&quot;:&quot;lhb&quot;,&quot;contacttext&quot;:&quot;18768101327&quot;&#125;,</div><div class="line">      &#123;&quot;contactid&quot;:1,&quot;contactname&quot;:&quot;lhh&quot;,&quot;contacttext&quot;:&quot;18768101328&quot;&#125;,</div><div class="line">      &#123;&quot;contactid&quot;:2,&quot;contactname&quot;:&quot;lbb&quot;,&quot;contacttext&quot;:&quot;18768101329&quot;&#125;,</div><div class="line">      &#123;&quot;contactid&quot;:3,&quot;contactname&quot;:&quot;hbl&quot;,&quot;contacttext&quot;:&quot;18768101320&quot;&#125;,</div><div class="line">      &#123;&quot;contactid&quot;:4,&quot;contactname&quot;:&quot;hhl&quot;,&quot;contacttext&quot;:&quot;18768101321&quot;&#125;,</div><div class="line">      &#123;&quot;contactid&quot;:5,&quot;contactname&quot;:&quot;bbl&quot;,&quot;contacttext&quot;:&quot;18768101322&quot;&#125;,</div><div class="line">      ];</div><div class="line">  &#125;</div><div class="line"></div><div class="line">    itemClick(event,contact)&#123;</div><div class="line">    // alert(contact.contactname);</div><div class="line">    //点击时候加载详情页</div><div class="line">    this.navCtrl.push(ContactDetailsPage,&#123;contact:contact&#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>contactdetails.ts中可以这样写：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">import &#123;Component&#125; from &apos;@angular/core&apos;;</div><div class="line">import &#123;NavController,NavParams&#125; from &apos;ionic-angular&apos;;</div><div class="line"></div><div class="line">@Component(&#123;</div><div class="line">  templateUrl: &apos;build/pages/contact/contactdetails.html&apos;</div><div class="line">&#125;)</div><div class="line">export class ContactDetailsPage &#123;</div><div class="line">  contact;</div><div class="line">  constructor(private params: NavParams) &#123;</div><div class="line">    this.contact=params.data.contact;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>contactdetails.html中可以这样写：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;ion-content padding&gt;</div><div class="line">    &#123;&#123;contact.contactname&#125;&#125;的手机号码是&#123;&#123;contact.contacttext&#125;&#125;</div><div class="line">&lt;/ion-content&gt;</div></pre></td></tr></table></figure></p>
<p>学习过程中发现了官方文档的重要性，但也不是万能的。接下来要学习一下angular2的doc。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Date-Object]]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/07/21/Date-Object/</url>
      <content type="html"><![CDATA[<p>Date.parse()返回毫秒数<br>new Date()返回字符串</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[获取元素字体大小及使用getComputedStyle]]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/07/20/get-fontSize/</url>
      <content type="html"><![CDATA[<p>今天在慕课网上的微博上看到一道题，<br>[<img src="http://ww4.sinaimg.cn/mw690/c5131475jw1f5z1firw9cj20n40i2dgu.jpg" alt="alt text" title="title">]，于是变也想试试通过按钮改变字体大小。<br><a id="more"></a></p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>由于不知道字体大小于是<code>word.style.fontSize = num + &#39;px&#39;;</code>结果出来，字体会先变小,然后再变大。想要字体直接变大，于是想通过<br><code>word.style.fontSize</code>获取word的字体大小，结果控制台出来结果为空。</p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>通过搜索，发现了一个解决方案：<br><figure class="highlight plain"><figcaption><span>id="div" style="font-size: 12px;"></span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;/div&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">    var style = document.body.currentStyle || document.defaultView.getComputedStyle(document.body, &apos;&apos;)</div><div class="line">    console.log(style.fontSize);</div><div class="line">    var div = document.getElementById(&apos;div&apos;);</div><div class="line">    console.log(div.style.fontSize);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>发现了一个方法：<code>getComputedStyle</code>。这样用用：<code>document.defaultView.getComputedStyle(element, &#39;&#39;).fontSize</code>。得出一个带<code>px</code>的值，可以用<code>parsent</code>获得数值。<br>ie中可以用<code>document.body.currentStyle.fontSize</code></p>
<p>function getStyle(element,wantstyle){<br>  var style= document.defaultView.getComputedStyle(element,””) || element.currentStyle;<br>  return style.wantstyle;<br>}</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[设置flex容器中的一个值使得align-items垂直居中]]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/07/11/made-flex-box-height-center/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>目前实现全屏垂直居中最好的方式之一应该是CSS3中使用flex布局，设置父容器<code>body{display:flex;justify-content:center;align-items:center;}</code>然后再为其设置一个<code>{height:100%;width:100%;}</code>。但此时似乎并不奏效，元素仍然贴合在顶部。</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>父元素高度没有被撑起。<br>查阅网上的解决方案，大部分回答都是要设置<code>html{height:100%;}body{height:100%;}</code>,有没有更简单的设置呢</p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>设置父容器{min-height:100vh;}即可</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在ubuntu16.04下安装nodejs]]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/07/06/install-nodejs-in-ubuntu/</url>
      <content type="html"><![CDATA[<p>系统环境：ubuntu16.04<br>Nodejs版本：4.4.7<br>时间：2016.07.06</p>
<p>由于通过<code>sudo apt-get install nodejs</code>命令下载的node版本过旧，<a id="more"></a>根据nodejs官方的提供的解决方案（<a href="https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions）" target="_blank" rel="external">https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions）</a></p>
<blockquote>
<p>Debian and Ubuntu based Linux distributions</p>
</blockquote>
<p>可以通过在终端输入以下命令来安装最新版本的nodejs：<br>(ubuntu官方建议在ubuntu 16.04中使用apt命令，即用<code>apt install</code>代替<code>apt-get install</code>。而且apt命令还有一个特点，就是可以直接在终端中显示进度条并高亮一些信息)</p>
<ul>
<li><code>curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -</code>(长期支持版本v4，二选一)</li>
<li><code>curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</code>（最新版本v6，二选一）</li>
<li><code>sudo apt install -y nodejs</code><br>然后下载一个编译工具，用于从npm编译安装附加组件</li>
<li><code>sudo apt install -y build-essential</code></li>
</ul>
<p>安装完成后可以查看nodejs与npm版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">:~$ node -v</div><div class="line">v4.4.7</div><div class="line">:~$ npm -v</div><div class="line">2.15.8</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何解决margin塌陷(collapse)]]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/07/06/css-margin-collapse/</url>
      <content type="html"><![CDATA[<p>如何解决margin塌陷</p>
<p>首先解释一个概念：Block Formatting Context<br>意为块级格式化上下文，缩写为BFC<br><a id="more"></a><br>在一个块级格式化上下文的元素内部的盒子</p>
<ul>
<li>内部的Box会在垂直方向，从顶部开始一个接一个地放置。</li>
<li>Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生叠加</li>
<li>每个元素的margin 子元素盒子的的左边， 与包含块border 父元素盒的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。</li>
<li>BFC的区域不会与float box叠加。</li>
<li>计算BFC的高度时，浮动元素也参与计算。</li>
</ul>
<p>下列情况将创建一个块格式化上下文：</p>
<blockquote>
<p>根元素或其它包含它的元素<br>浮动 (元素的 float 不为 none)<br>绝对定位元素 (元素的 position 为 absolute 或 fixed)<br>行内块 inline-blocks (元素的 display: inline-block)<br>表格单元格 (元素的 display: table-cell，HTML表格单元格默认属性)<br>表格标题 (元素的 display: table-caption, HTML表格标题默认属性)<br>overflow 的值不为 visible的元素<br>弹性盒子 flex boxes (元素的 display: flex 或 inline-flex)<br>摘自 MDN</p>
<p>链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context</a></p>
</blockquote>
<h2 id="什么是塌陷"><a href="#什么是塌陷" class="headerlink" title="什么是塌陷"></a>什么是塌陷</h2><blockquote>
<p>一个BFC的内的相邻盒或者父子盒排列时，会取两个盒子相邻边的最大margin作为相邻边的共用marging</p>
</blockquote>
<p>换言之，就是说：</p>
<ol>
<li>对于上下两个并列的块盒子而言，上面盒子的margin-bottom和下面盒子的margin-top会塌陷，也就是会取上下两者margin里最大值作为显示值</li>
<li>对于父块盒子内含子块盒子的情况，如果父盒子没有垂直边框和填充,那其高度就是其子盒子顶部和底部边框边缘之间的距离</li>
</ol>
<p>另外，还有一种情况也会发生塌陷：</p>
<ol>
<li>块级框自身发生collapce现象：即当垂直padding和height为零时，上下外边距会发生塌陷</li>
</ol>
<h2 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h2><ul>
<li>设置padding和border进行隔离</li>
<li>创建BFC，因为创建了BFC的元素不会与子元素和外部毗邻元素发生collapse</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[将hexo blog放在gitpage的子目录中]]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/07/03/put-blog-in-a-subdirectory/</url>
      <content type="html"><![CDATA[<p>将hexo blog放在gitpage的子目录中</p>
<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>将自己写的页面设置为<code>http://user.github.io</code>的主页面，然后访问<code>http://user.github.io/blog</code>进入hexo blog<br><a id="more"></a></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>Github支持在任意仓库中搭建静态博客，只需要将静态网页放置在gh-pages分支下，此时可以通过<code>http://user.github.io/repo-name</code>就可以访问了，同理如果主仓库绑定了域名，同样可以通过域名/仓库名的方式来访问</p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><ol>
<li>将自己写的index.html放在在user.github.io这个repository中</li>
<li>新建一个repository，命名为blog，并创建一个gh-pages分支</li>
<li>将<code>_config.yml</code>中的<code>url</code>设置为<code>http://user.github.io/blog</code>，<code>root</code>设置为<code>/blog/</code></li>
<li>然后将<code>deploy</code>中的<code>repo</code>设置为<code>https://github.com/user/blog.git</code>，<code>brunch</code>设置为<code>gh-pages</code></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://laihaibo.github.io/blog/blog/2016/07/03/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
